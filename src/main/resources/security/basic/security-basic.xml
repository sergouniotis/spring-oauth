<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd 
http://www.springframework.org/schema/data/jpa 
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task.xsd 
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd 
http://www.springframework.org/schema/security/oauth2 
http://www.springframework.org/schema/security/spring-security-oauth2.xsd">


	<!-- Creates a filter chain -->
	<!-- Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: 
		No bean named 'org.springframework.security.authenticationManager' is defined: 
		Did you forget to add a gobal <authentication-manager> element to your configuration 
		(with child <authentication-provider> elements)? Alternatively you can use 
		the authentication-manager-ref attribute on your <http> and <global-method-security> 
		ele ments. -->

	<!-- regarding the access decision manager As you've observed, the acl voters 
		don't support filter invocations as they are intended for checking secured 
		methods, not web requests. You should configure a separate AccessDecisionManager 
		for use with your method security and add the acl voters to that -->
	<sec:http use-expressions="true" authentication-manager-ref="userAuthenticationManager"
		pattern="/endpoint/public"><!-- access-decision-manager-ref="accessDecisionManager" entry-point-ref="basicAuthenticationEntryPoint" -->
		<sec:intercept-url pattern="/endpoint/**" access="permitAll" /><!-- 
			access="isAuthenticated()" -->
		<sec:anonymous enabled="true" />
		<sec:csrf disabled="true" />
		<sec:http-basic entry-point-ref="basicAuthenticationEntryPoint" />
		<sec:custom-filter ref="basicAuthenticationFilter"
			position="FORM_LOGIN_FILTER " />
	</sec:http>

	<bean id="basicAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="tpns" />
	</bean>

	<sec:authentication-manager id="userAuthenticationManager">
		<sec:authentication-provider>
			<sec:jdbc-user-service data-source-ref="dataSource"
				role-prefix="ROLE_"
				authorities-by-username-query="select u.username, r.role from users u inner join users_roles r on r.user_id=u.user_id where username = ?"
				users-by-username-query="select username,password,true from users where username = ?"/>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="usersByUsernameQuery"
			value="select username,password,true from users where username = ?" />
		<property name="authoritiesByUsernameQuery"
			value="select u.username, r.role from users u inner join users_roles r on r.user_id=u.user_id where username = ?" />
		<property name="enableGroups" value="true" />
		<property name="dataSource" ref="dataSource"/>
		<!-- <property name="groupAuthoritiesByUsernameQuery" value=""/> -->
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<bean
					class="org.springframework.security.web.access.expression.WebExpressionVoter" />
				<bean class="org.springframework.security.access.annotation.Jsr250Voter" />
				<bean class="org.springframework.security.access.vote.RoleVoter">
					<property name="rolePrefix" value="" />
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<sec:global-method-security
		secured-annotations="enabled" jsr250-annotations="disabled">
	</sec:global-method-security>

	<bean id="basicAuthenticationFilter"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<constructor-arg ref="userAuthenticationManager" />
	</bean>


</beans>