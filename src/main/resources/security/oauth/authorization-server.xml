<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd 
http://www.springframework.org/schema/data/jpa 
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task.xsd 
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd 
http://www.springframework.org/schema/security/oauth2 
http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

	<!-- Token Store -->
	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

	<oauth2:client-details-service id="client-details-service">
		<oauth2:client client-id="my-trusted-client"
			authorized-grant-types="password,authorization_code,refresh_token,implicit"
			scope="read,write,trust" resource-ids="oauth2-resource"
			access-token-validity="60" authorities="ROLE_AUTHOR" />
		<oauth2:client client-id="my-client-with-registered-redirect"
			authorized-grant-types="authorization_code" scope="read,trust"
			resource-ids="oauth2-resource" authorities="ROLE_AUTHOR"
			redirect-uri="http://anywhere?key=value" />
		<oauth2:client client-id="my-client-with-secret" secret="secret"
			authorized-grant-types="password,client_credentials" scope="read"
			resource-ids="oauth2-resource" access-token-validity="60"
			authorities="ROLE_AUTHOR" />
	</oauth2:client-details-service>

	<oauth2:authorization-server
		client-details-service-ref="client-details-service"
		token-services-ref="tokenServices">
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="client-details-service" />
	</bean>

	<sec:http create-session="never" use-expressions="true" access-decision-manager-ref="accessDecisionManager" 
		authentication-manager-ref="clientAuthenticationManager" pattern="/oauth/token">
<!-- 		<sec:intercept-url pattern="/oauth/token"   access=""/> -->
		<sec:csrf disabled="true" />
		<sec:anonymous enabled="true" />
		
		<sec:http-basic entry-point-ref="oauthClientAuthenticationEntryPoint" />
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter" 
			before="PRE_AUTH_FILTER" />
			
	</sec:http>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<bean id="oauthClientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="tpns" />
	</bean>

	<sec:authentication-manager id="clientAuthenticationManager">
		<sec:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</sec:authentication-manager>
	
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="author" authorities="ROLE_AUTHOR" password="author" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="client-details-service" />
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
			</list>
		</constructor-arg>
	</bean>

<!-- 	<sec:global-method-security 	jsr250-annotations="enabled" >
		<sec:expression-handler ref="oauthExpressionHandler" />
	</sec:global-method-security>

	<oauth2:expression-handler id="oauthExpressionHandler" />
	<oauth2:web-expression-handler id="oauthWebExpressionHandler" /> -->


</beans>